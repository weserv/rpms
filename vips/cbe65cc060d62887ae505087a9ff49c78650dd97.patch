From cbe65cc060d62887ae505087a9ff49c78650dd97 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Thu, 23 Mar 2023 20:07:08 +0100
Subject: [PATCH] colour: add a fallback for greyscale profile (#3399)

Uses the CC0-licensed 'sGrey-v2-magic.icc' profile from
https://github.com/saucecontrol/Compact-ICC-Profiles#greyscale
---
 ChangeLog                         |   4 +++
 libvips/colour/icc_transform.c    |  18 ++++++++--
 libvips/colour/profiles.c         |  54 ++++++++++++++++++++++++++++++
 3 files changed, 74 insertions(+), 2 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 1c914def69..05499ea69c 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,7 @@
+TBD 8.14.3
+
+- fix ICC handling of greyscale images with a incompatible profile [kleisauke]
+
 21/3/23 8.14.2
 
 - use a private fontmap in vips_text() [jcupitt]
diff --git a/libvips/colour/icc_transform.c b/libvips/colour/icc_transform.c
index a2fbf71e46..f7fab82e8e 100644
--- a/libvips/colour/icc_transform.c
+++ b/libvips/colour/icc_transform.c
@@ -720,8 +720,22 @@ vips_icc_set_import( VipsIcc *icc,
 	 */
 	if( code->in &&
 		!icc->in_profile ) {
-		const char *name = code->in->Type == VIPS_INTERPRETATION_CMYK ?
-			"cmyk" : "srgb";
+		const char *name;
+
+		switch( code->in->Type ) {
+		case VIPS_INTERPRETATION_B_W:
+		case VIPS_INTERPRETATION_GREY16:
+			name = "sgrey";
+			break;
+
+		case VIPS_INTERPRETATION_CMYK:
+			name = "cmyk";	
+			break;
+
+		default:
+			name = "srgb";
+			break;
+		}
 
 		if( 
 			!vips_profile_load( name, &icc->in_blob, NULL ) &&
diff --git a/libvips/colour/profiles.c b/libvips/colour/profiles.c
index 76b5d62f42..e8081f8d6c 100644
--- a/libvips/colour/profiles.c
+++ b/libvips/colour/profiles.c
@@ -32201,6 +32201,59 @@ static VipsProfileFallback vips__profile_fallback_p3 = {
     }
 };
 
+static VipsProfileFallback vips__profile_fallback_sGrey = {
+    "sGrey",
+    616,
+    {
+ 0x78, 0xDA, 0x62, 0x60, 0x60, 0xCA, 0xC8, 0x49, 0xCE, 0x2D, 0x66,
+ 0x12, 0x60, 0x60, 0xC8, 0xCD, 0x2B, 0x29, 0x72, 0x0F, 0x72, 0x8C, 0x8C,
+ 0x88, 0x8C, 0x52, 0x60, 0x7F, 0xC4, 0xC0, 0xCC, 0x20, 0xC2, 0xC0, 0xC9,
+ 0xC0, 0xC7, 0x20, 0x9B, 0x98, 0x5C, 0x5C, 0xE0, 0x1B, 0xEC, 0x16, 0xC2,
+ 0x00, 0x04, 0xC5, 0x89, 0xE5, 0xC5, 0xC9, 0x25, 0x45, 0x39, 0x0C, 0x28,
+ 0xE0, 0xDB, 0x35, 0x06, 0x46, 0x10, 0x7D, 0x59, 0x37, 0x23, 0x31, 0x2F,
+ 0xA5, 0xF7, 0x94, 0xCE, 0x77, 0x3F, 0xED, 0xBD, 0x57, 0x2E, 0xBC, 0x6C,
+ 0xB7, 0x32, 0x57, 0xFB, 0xCC, 0xCD, 0x80, 0x1F, 0xB0, 0xA4, 0xA4, 0x16,
+ 0x27, 0x03, 0xE9, 0x2D, 0x40, 0x1C, 0x9F, 0x5C, 0x50, 0x54, 0x02, 0xA4,
+ 0x2F, 0x00, 0x31, 0x4F, 0x79, 0x49, 0x01, 0x88, 0x7D, 0x07, 0x88, 0x45,
+ 0xB2, 0x43, 0x82, 0x9C, 0x81, 0xF4, 0x07, 0x06, 0x06, 0xC6, 0x0A, 0xB0,
+ 0x7A, 0x08, 0x60, 0x2D, 0x76, 0x2F, 0xAA, 0x44, 0x36, 0xAC, 0x24, 0xB5,
+ 0xA2, 0x04, 0x44, 0x3B, 0x3B, 0x1B, 0x30, 0x80, 0xFC, 0x01, 0x11, 0xFD,
+ 0x1C, 0x02, 0x76, 0x1F, 0xA3, 0xD8, 0xC9, 0xE4, 0xD2, 0xA2, 0x32, 0xA8,
+ 0xD2, 0x6D, 0x40, 0x0C, 0x08, 0x69, 0x01, 0x96, 0xFE, 0x1C, 0x00, 0x38,
+ 0x00, 0x54, 0x00, 0x70, 0x00, 0x8C, 0x00, 0xA8, 0x00, 0xC4, 0x00, 0xE1,
+ 0x01, 0x00, 0x01, 0x22, 0x01, 0x46, 0x01, 0x6D, 0x01, 0x95, 0x01, 0xC1,
+ 0x01, 0xF0, 0x02, 0x20, 0x02, 0x55, 0x02, 0x8B, 0x02, 0xC4, 0x03, 0x01,
+ 0x03, 0x3F, 0x03, 0x82, 0x03, 0xC6, 0x04, 0x0E, 0x04, 0x59, 0x04, 0xA7,
+ 0x04, 0xF9, 0x05, 0x4C, 0x05, 0xA4, 0x05, 0xFE, 0x06, 0x5C, 0x06, 0xBE,
+ 0x07, 0x21, 0x07, 0x8A, 0x07, 0xF4, 0x08, 0x63, 0x08, 0xD5, 0x09, 0x49,
+ 0x09, 0xC3, 0x0A, 0x3F, 0x0A, 0xBF, 0x0B, 0x42, 0x0B, 0xC9, 0x0C, 0x54,
+ 0x0C, 0xE1, 0x0D, 0x74, 0x0E, 0x09, 0x0E, 0xA2, 0x0F, 0x40, 0x0F, 0xE0,
+ 0x10, 0x85, 0x11, 0x2D, 0x11, 0xDA, 0x12, 0x8A, 0x13, 0x3E, 0x13, 0xF6,
+ 0x14, 0xB2, 0x15, 0x71, 0x16, 0x36, 0x16, 0xFD, 0x17, 0xCA, 0x18, 0x99,
+ 0x19, 0x6E, 0x1A, 0x46, 0x1B, 0x22, 0x1C, 0x03, 0x1C, 0xE7, 0x1D, 0xD0,
+ 0x1E, 0xBD, 0x1F, 0xAE, 0x20, 0xA4, 0x21, 0x9E, 0x22, 0x9C, 0x23, 0x9F,
+ 0x24, 0xA5, 0x25, 0xB1, 0x26, 0xC0, 0x27, 0xD5, 0x28, 0xED, 0x2A, 0x0A,
+ 0x2B, 0x2B, 0x2C, 0x51, 0x2D, 0x7C, 0x2E, 0xAA, 0x2F, 0xDE, 0x31, 0x16,
+ 0x32, 0x52, 0x33, 0x94, 0x34, 0xD9, 0x36, 0x24, 0x37, 0x73, 0x38, 0xC6,
+ 0x3A, 0x20, 0x3B, 0x7C, 0x3C, 0xDF, 0x3E, 0x45, 0x3F, 0xB0, 0x41, 0x21,
+ 0x42, 0x96, 0x44, 0x10, 0x45, 0x8F, 0x47, 0x12, 0x48, 0x9B, 0x4A, 0x28,
+ 0x4B, 0xBB, 0x4D, 0x51, 0x4E, 0xEE, 0x50, 0x8F, 0x52, 0x35, 0x53, 0xE0,
+ 0x55, 0x90, 0x57, 0x45, 0x59, 0x00, 0x5A, 0xBE, 0x5C, 0x84, 0x5E, 0x4C,
+ 0x60, 0x1B, 0x61, 0xEF, 0x63, 0xC7, 0x65, 0xA6, 0x67, 0x89, 0x69, 0x71,
+ 0x6B, 0x5F, 0x6D, 0x51, 0x6F, 0x4A, 0x71, 0x46, 0x73, 0x4A, 0x75, 0x51,
+ 0x77, 0x5E, 0x79, 0x71, 0x7B, 0x88, 0x7D, 0xA6, 0x7F, 0xC8, 0x81, 0xF0,
+ 0x84, 0x1E, 0x86, 0x50, 0x88, 0x89, 0x8A, 0xC5, 0x8D, 0x09, 0x8F, 0x51,
+ 0x91, 0x9F, 0x93, 0xF3, 0x96, 0x4B, 0x98, 0xAB, 0x9B, 0x0E, 0x9D, 0x78,
+ 0x9F, 0xE7, 0xA2, 0x5B, 0xA4, 0xD6, 0xA7, 0x56, 0xA9, 0xDB, 0xAC, 0x67,
+ 0xAE, 0xF7, 0xB1, 0x8F, 0xB4, 0x2A, 0xB6, 0xCC, 0xB9, 0x74, 0xBC, 0x21,
+ 0xBE, 0xD5, 0xC1, 0x8D, 0xC4, 0x4C, 0xC7, 0x10, 0xC9, 0xDA, 0xCC, 0xAB,
+ 0xCF, 0x7F, 0xD2, 0x5C, 0xD5, 0x3D, 0xD8, 0x24, 0xDB, 0x12, 0xDE, 0x04,
+ 0xE0, 0xFE, 0xE3, 0xFC, 0xE7, 0x01, 0xEA, 0x0C, 0xED, 0x1C, 0xF0, 0x34,
+ 0xF3, 0x50, 0xF6, 0x73, 0xF9, 0x9B, 0xFC, 0xCA, 0xFF, 0xFF, 0xFC, 0x8B,
+ 0xC2, 0xA2,
+    }
+};
+
 static VipsProfileFallback vips__profile_fallback_sRGB = {
     "sRGB",
     6922,
@@ -32407,6 +32460,7 @@ static VipsProfileFallback vips__profile_fallback_sRGB = {
 VipsProfileFallback *vips__profile_fallback_table[] = {
     &vips__profile_fallback_cmyk,
     &vips__profile_fallback_p3,
+    &vips__profile_fallback_sGrey,
     &vips__profile_fallback_sRGB,
     NULL
 };
